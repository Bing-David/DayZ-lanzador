//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DayZ_Launcher.Properties {
    using System;
    
    
    /// <summary>
    ///   Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
    /// </summary>
    // StronglyTypedResourceBuilder generó automáticamente esta clase
    // a través de una herramienta como ResGen o Visual Studio.
    // Para agregar o quitar un miembro, edite el archivo .ResX y, a continuación, vuelva a ejecutar ResGen
    // con la opción /str o recompile su proyecto de VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DayZ_Launcher.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
        ///   búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a #SURVIVAL
        ///[Launcher]
        ///Target = DayZ_BE.exe
        ///StartIn = 
        ///CommandLine = -name=CHANGEME -connect=20.206.72.125 -port=2302 &quot;-mod=blacksurvival/connectmod;blacksurvival/fondosurvival;blacksurvival/killfeed;blacksurvival/cargadores;blacksurvival/mmg;blacksurvival/stamina;blacksurvival/weapons;blacksurvival/Banking;blacksurvival/chetac;blacksurvival/MVS;blacksurvival/llaves;blacksurvival/cajas;blacksurvival/identidad;blacksurvival/helis;blacksurvival/C4;blacksurvival/Banking;blacksurvival/party;modsS/Survival;mod [resto de la cadena truncado]&quot;;.
        /// </summary>
        internal static string _Chernarus {
            get {
                return ResourceManager.GetString("_Chernarus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a #PVP
        ///[Launcher]
        ///Target = DayZ_BE.exe
        ///StartIn = 
        ///CommandLine = -name=CHANGEME -connect=20.206.72.125 -port=2302 &quot;-mod=blackcorvus\pantallacarga;blackcorvus\connectmod;mods\test;mods\LeadBoard;mods\mapa;mods\Otros;mods\pvp&quot; -noSpash -cpuCount=! -exThreads=! -maxMem=2048 -noLogs -noBenchmark -window-mode exclusive
        ///SteamClientPath = &quot;Steam\SmartSteamEmu.dll&quot;
        ///SteamClientPath64 = &quot;Steam\SmartSteamEmu64.dll&quot;
        ///Persist = 0
        ///ParanoidMode = 0
        ///[SmartSteamEmu]
        ///AvatarFilename = avatar.png
        ///PersonaName = CHANGEME        /// [resto de la cadena truncado]&quot;;.
        /// </summary>
        internal static string _Chernarus_two {
            get {
                return ResourceManager.GetString("_Chernarus_two", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Nombre=CHANGEME.
        /// </summary>
        internal static string Nombre {
            get {
                return ResourceManager.GetString("Nombre", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap PlayGreen {
            get {
                object obj = ResourceManager.GetObject("PlayGreen", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap PlayRed {
            get {
                object obj = ResourceManager.GetObject("PlayRed", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap PlayYellow {
            get {
                object obj = ResourceManager.GetObject("PlayYellow", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a V : 1.0.
        /// </summary>
        internal static string Version {
            get {
                return ResourceManager.GetString("Version", resourceCulture);
            }
        }
    }
}
